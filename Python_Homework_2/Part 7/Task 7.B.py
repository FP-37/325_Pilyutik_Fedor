"""
Рассмотрим последовательность целых чисел длины N. По ней с шагом 1 двигается “окно” длины K,
то есть сначала в “окне” видно первые K чисел, на следующем шаге в “окне” уже будут находиться K чисел,
начиная со второго, и так далее до конца последовательности.
Требуется для каждого положения “окна” определить минимум в нём.

Входные данные
В первой строке входных данных содержатся
два числа N и K (1 ≤ N ≤ 150000, 1 ≤ K ≤ 10000, K ≤ N) – длины последовательности и “окна”, соответственно.
На следующей строке находятся N чисел – сама последовательность.

Выходные данные
Выходые данные должны содержать N − K + 1 строк – минимумы для каждого положения “окна”.
"""
from collections import deque

N, K = map(int, input().split())
arr = list(map(int, input().split()))

dq = deque()

for i in range(N):
    while dq and arr[dq[-1]] > arr[i]:
        dq.pop()
    dq.append(i)

    if dq[0] <= i - K:
        dq.popleft()

    if i >= K - 1:
        print(arr[dq[0]])