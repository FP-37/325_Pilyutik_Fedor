"""
Даны два списка A и B упорядоченных по неубыванию.
Объедините их в один упорядоченный список С (то есть он должен содержать len(A)+len(B) элементов).
Решение оформите в виде функции merge(A,B), возвращающей новый список.
Алгоритм должен иметь сложность O(len(A)+len(B)).
Модифицировать исходные списки запрещается.
Использовать функцию sorted и метод sort запрещается.

Входные данные
Программа получает на вход два неубывающих списка, каждый в отдельной строке.

Выходные данные
Программа должна вывести последовательность неубывающих чисел, полученных объединением двух данных списков.
"""
def merge(A, B):
    # Создаем новый список для хранения объединенных элементов
    C = []

    # Два указателя, один на начало каждого списка
    i = 0
    j = 0

    # Проходим по элементам, пока не исчерпаны оба списка
    while i < len(A) and j < len(B):
        # Сравниваем текущие элементы и выбираем меньший
        if A[i] < B[j]:
            C.append(A[i])
            i += 1
        else:
            C.append(B[j])
            j += 1

    # Добавляем оставшиеся элементы из обоих списков
    C.extend(A[i:])
    C.extend(B[j:])

    return C

def main():
    A = list(map(int, input().strip().split()))
    B = list(map(int, input().strip().split()))
    result = merge(A, B)
    print(*result)

if __name__ == "__main__":
    main()